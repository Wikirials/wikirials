@*@model IEnumerable<Wikirials.Models.Tutorial>*@
@model PagedList.IPagedList<Wikirials.Models.Tutorial>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Tutorials";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<br>
<div class="container">
    <h2 class="marginspecial">@ViewBag.Title:</h2>
    <div class="marginclass">
        <div class="well">
            @using (Html.BeginForm("Index", "Tutorial", FormMethod.Get))
            {
                <p>
                    <b>Tutorial Title:</b> @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                    <input class="btn btn-success" type="submit" value="Search" />

                </p>
            }
            <hr>
            @foreach (var item in Model)
            {
                <div class="row">
                    @if (item.FileMains != null)
                    {
                        if (item.FileMains.Any(f => f.FileType == FileType.Pic))
                        {
                            <div class="col-md-3">
                                <img src="~/FileMain?id=@item.FileMains.First(f => f.FileType == FileType.Pic).FileMainId" alt="pic" width="260" height="180" />
                            </div>
                        }                       
                        else
                        {
                            <div class="col-md-3">
                                <img src="http://placehold.it/260x180" alt="">
                            </div>
                        }
                    }
                    <div class="col-md-9">
                        <h4>@Html.DisplayFor(modelItem => item.Title, new { currentFilter = ViewBag.CurrentFilter })</h4>

                        @if (item.Body.Length < 20)
                        {
                            <p>
                                @Html.DisplayFor(modelItem => item.Body)
                            </p>
                        }
                        else
                        {
                            <p>
                                @Html.DisplayFor(modelItem => item.Body).ToString().Substring(0, 20)...
                            </p>
                        }

                        <p><a href="@Url.Action("Details", "Tutorial", new { id = item.ID })" class="btn btn-info btn-sm">Read More</a></p>
                        <p>@Html.ActionLink("Download pdf", "ShowPdf", "SomeController", null, new { target = "_blank" })</p>
                        <br />
                        <ul class="list-inline">
                            <li><i class="glyphicon glyphicon-user"></i> by <a href="">@Html.DisplayFor(modelItem => item.User.Name)</a> | </li>
                            <li><i class="glyphicon glyphicon-calendar"></i> @Html.DisplayFor(modelItem => item.Date) | </li>
                            <li><i class="glyphicon glyphicon-pencil"></i> @Html.ActionLink("Edit", "Edit", new { id = item.ID }) | </li>
                            <li><i class="glyphicon glyphicon-remove"></i> @Html.ActionLink("Delete", "Delete", new { id = item.ID }) </li>
                        </ul>
                    </div>
                </div>
                <hr>
            }

        </div>
    </div>
</div>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))













@*<h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Body)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Classification)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContentType)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Body)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Classification)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContentType)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }

        </table>*@
