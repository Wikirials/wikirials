@model Wikirials.ViewModels.TutorialComment

@{
    ViewBag.Title = "Tutorial Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

    <div class="welll">
        <fieldset>



            <h1>@Html.DisplayFor(model => model.Tutorial.Title)@if (User.IsInRole("Admin"))
            {<span class="pull-right "><a href="@Url.Action("Edit", "Tutorial", new { id = Model.Tutorial.ID })" class="btn btn-warning">Edit</a></span>}</h1>
            <div class="grow pic">
                @if (Model.Tutorial.FileMains.Any(f => f.FileType == FileType.Pic))
                {
                    <img class="displayed" src="~/FileMain?id=@Model.Tutorial.FileMains.First(f => f.FileType == FileType.Pic).FileMainId" alt="pic" />
                }
            </div>
            <br>
            <div>

                <p class="tut">@Html.DisplayFor(model => model.Tutorial.Body)</p>
                <div>
                    <a class="btn icon-btn btn-primary" href="#"><span class="glyphicon btn-glyphicon glyphicon-thumbs-up img-circle text-primary"></span>Like</a>

                    <div class="pull-right">
                        <span><b>Author:</b>@Html.DisplayFor(model => model.Tutorial.User.Name)</span> <span><b>Category:</b> Agricultura</span> <span><b>Likes:</b> 123</span> <span><b>View Count:</b> 123</span>
                    </div>
                </div>

            </div>

            @if (Request.IsAuthenticated)
            {

                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <br>
                    <div>
                        @Html.EditorFor(model => model.Comment.Text, new { htmlAttributes = new { @class = "form-control textareacomment" } })
                        @Html.ValidationMessageFor(model => model.Comment.Text, "", new { @class = "text-danger" })
                    </div>


                    <br><br>
                    <div class="pull-right">
                        <input type="submit" value="Comment" class="btn btn-success" />
                    </div>
                }
            }
            
            @foreach (var item in Model.Comments)
            {
                if (item.Tutorial == Model.Tutorial)
                {
                    <div class="row">
                        <div class="col-sm-1">
                            @if (item.User != null && item.User.Files != null)
                            {
                                if (item.User.Files.Any(f => f.FileType == FileType.Avatar))
                                {
                                    <div class="thumbnail">
                                        <img src="~/File?id=@item.User.Files.First(f => f.FileType == FileType.Avatar).FileId" alt="pic" />
                                    </div>
                                }
                                else
                                {
                                    <div class="thumbnail">
                                        <img class="img-responsive user-photo" src="https://ssl.gstatic.com/accounts/ui/avatar_2x.png">
                                    </div>
                                }
                            }
                        </div><!-- /col-sm-1 -->

                        <div class="col-sm-5">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <strong>@Html.DisplayFor(modelItem => item.User.Name)</strong> <span class="text-muted">@Html.DisplayFor(modelItem => item.DateTime)</span>
                                </div>
                                <div class="panel-body">
                                    @Html.DisplayFor(modelItem => item.Text)
                                </div>
                            </div>
                        </div>

                    </div>
                }
            }

        </fieldset>
    </div>
</div>


@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Comment</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Comment.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Comment.Text, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comment.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comment.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Comment.DateTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comment.DateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Comment.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comment.DateTime)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Comments)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Text)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTime)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }
    </table>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




@*<h2>Details</h2>

    <div>
        <h4>Tutorial</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Body)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Body)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Date)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Date)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Classification)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Classification)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Type)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Type)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ContentType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ContentType)
            </dd>

            @if (Model.Files.Any(f => f.FileType == FileType.Pic))
            {
                <dt>
                    Pic
                </dt>
                <dd>
                    <img src="~/File?id=@Model.Files.First(f => f.FileType == FileType.Pic).FileId" alt="pic" />
                </dd>
            }

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
